openapi: 3.0.0
info:
  title: API_Example
  description: SwaggerHub 실습을 위한API Example
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/dododev/API_Example/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://jsonplaceholder.typicode.com
  description: JSON Placeholder API
- url: https://www.google.com
  description: Google API
paths:
  /todos/{id}:
    get:
      summary: Return a user by ID
      parameters:
      - name: id
        in: path
        description: The ID of the user to return
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
  /complete/search:
    get:
      summary: 자동완성 검색 결과를 반환합니다.
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
      - name: client
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: A Text File
          content:
            text/plain:
              schema:
                type: string
components:
  schemas:
    LightingSummary:
      type: object
      properties:
        zones:
          type: array
          items:
            $ref: '#/components/schemas/LightingZone'
        zoneStatus:
          type: array
          items:
            $ref: '#/components/schemas/LightingZoneStatus'
      description: ok
    LightingZone:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        deviceId:
          type: integer
          format: int32
        deviceType:
          type: string
          enum:
          - dimmer
          - switch
        zone:
          type: string
    LightingZoneStatus:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        lastUpdate:
          type: string
          format: date-time
        level:
          type: integer
          format: int32
      description: the status of the lighting zone.
    TemperatureSummary:
      type: object
      properties:
        zones:
          type: array
          items:
            $ref: '#/components/schemas/TemperatureZone'
        zoneStatus:
          type: array
          items:
            $ref: '#/components/schemas/TemperatueZoneStatus'
      description: ok
    TemperatureZone:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: the unique identifier for the zone
          format: int32
        name:
          type: string
        inputPosition:
          type: integer
          format: int32
        outputPosition:
          type: integer
          format: int32
        zone:
          type: string
      description: a single temperature zone
    TemperatueZoneStatus:
      required:
      - id
      - timestamp
      - value
      type: object
      properties:
        id:
          type: string
          description: the unique identifier for the zone
        name:
          type: string
          description: the name of the zone
        value:
          type: number
          description: the temperature in the zone
          format: double
        units:
          type: string
          description: the temperature units
          default: fahrenheit
          enum:
          - celsius
          - fahrenheit
        timestamp:
          type: string
          description: the timestamp when the temperature was measured
          format: date-time
      description: status of a single zone
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
          example: everything is ok
    HeaterState:
      type: object
      properties:
        id:
          type: string
        state:
          type: string
    DeviceState:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        lastUpdate:
          type: string
          format: date-time
        level:
          type: integer
          format: int32
    ForecastResponse:
      type: object
      properties:
        city:
          $ref: '#/components/schemas/City'
        values:
          type: array
          items:
            $ref: '#/components/schemas/Forecast'
    Forecast:
      type: object
      properties:
        date:
          type: string
          format: date-time
        pressure:
          type: number
          format: double
        humidity:
          type: integer
          format: int32
        windSpeed:
          type: number
          format: double
        clouds:
          type: integer
          format: int32
        temperature:
          $ref: '#/components/schemas/ForecastTemperature'
        weather:
          $ref: '#/components/schemas/WeatherForecast'
    City:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        lat:
          type: number
          format: double
        lon:
          type: number
          format: double
        country:
          type: string
    ForecastTemperature:
      type: object
      properties:
        low:
          type: number
          format: double
        high:
          type: number
          format: double
        morning:
          type: number
          format: double
        day:
          type: number
          format: double
        evening:
          type: number
          format: double
        night:
          type: number
          format: double
    WeatherForecast:
      type: object
      properties:
        summary:
          type: string
        description:
          type: string
        icon:
          type: string
    DeviceRegistrationInfo:
      type: object
      properties:
        uri:
          type: string
          format: uri
          example: http://10.0.0.220:8080
        id:
          type: string
          format: uuid
          example: 0729a580-2240-11e6-9eb5-0002a5d5c51b
    inline_response_200:
      type: object
      properties:
        userId:
          type: integer
        id:
          type: integer
        title:
          type: string
        completed:
          type: boolean
